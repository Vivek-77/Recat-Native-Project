{"version":3,"sources":["HeaderConfig.tsx"],"names":["React","StyleSheet","I18nManager","Platform","View","ScreenStackHeaderBackButtonImage","ScreenStackHeaderCenterView","ScreenStackHeaderConfig","ScreenStackHeaderLeftView","ScreenStackHeaderRightView","ScreenStackHeaderSearchBarView","SearchBar","useTheme","HeaderTitle","processFonts","HeaderConfig","headerBackImageSource","headerBackTitle","headerBackTitleStyle","headerBackTitleVisible","headerBackVisible","headerShadowVisible","headerLargeStyle","headerLargeTitle","headerLargeTitleShadowVisible","headerLargeTitleStyle","headerLeft","headerRight","headerShown","headerStyle","headerBlurEffect","headerTintColor","headerTitle","headerTitleStyle","headerTopInsetEnabled","headerTranslucent","route","orientation","headerSearchBar","statusBarAnimation","statusBarHidden","statusBarStyle","title","colors","tintColor","OS","primary","text","headerBackTitleStyleFlattened","flatten","headerLargeTitleStyleFlattened","headerTitleStyleFlattened","headerStyleFlattened","headerLargeStyleFlattened","backTitleFontFamily","largeTitleFontFamily","titleFontFamily","fontFamily","titleText","undefined","name","headerLeftElement","headerRightElement","headerTitleElement","children","Error","backButtonInCustomView","backgroundColor","card","fontSize","isRTL","color","fontWeight","styles","row","create","flexDirection","alignItems"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { StyleSheet, I18nManager, Platform, View } from 'react-native';\nimport {\n  ScreenStackHeaderBackButtonImage,\n  ScreenStackHeaderCenterView,\n  ScreenStackHeaderConfig,\n  ScreenStackHeaderLeftView,\n  ScreenStackHeaderRightView,\n  ScreenStackHeaderSearchBarView,\n  SearchBar,\n} from 'react-native-screens';\nimport { Route, useTheme } from '@react-navigation/native';\nimport { HeaderTitle } from '@react-navigation/elements';\nimport type { NativeStackNavigationOptions } from '../types';\nimport { processFonts } from './FontProcessor';\n\ntype Props = NativeStackNavigationOptions & {\n  route: Route<string>;\n};\n\nexport default function HeaderConfig({\n  headerBackImageSource,\n  headerBackTitle,\n  headerBackTitleStyle,\n  headerBackTitleVisible = true,\n  headerBackVisible,\n  headerShadowVisible,\n  headerLargeStyle,\n  headerLargeTitle,\n  headerLargeTitleShadowVisible,\n  headerLargeTitleStyle,\n  headerLeft,\n  headerRight,\n  headerShown,\n  headerStyle,\n  headerBlurEffect,\n  headerTintColor,\n  headerTitle,\n  headerTitleStyle,\n  headerTopInsetEnabled = true,\n  headerTranslucent,\n  route,\n  orientation,\n  headerSearchBar,\n  statusBarAnimation,\n  statusBarHidden,\n  statusBarStyle,\n  title,\n}: Props): JSX.Element {\n  const { colors } = useTheme();\n  const tintColor =\n    headerTintColor != null\n      ? headerTintColor\n      : Platform.OS === 'ios'\n      ? colors.primary\n      : colors.text;\n\n  const headerBackTitleStyleFlattened =\n    StyleSheet.flatten(headerBackTitleStyle) || {};\n  const headerLargeTitleStyleFlattened =\n    StyleSheet.flatten(headerLargeTitleStyle) || {};\n  const headerTitleStyleFlattened = StyleSheet.flatten(headerTitleStyle) || {};\n  const headerStyleFlattened = StyleSheet.flatten(headerStyle) || {};\n  const headerLargeStyleFlattened = StyleSheet.flatten(headerLargeStyle) || {};\n\n  const [\n    backTitleFontFamily,\n    largeTitleFontFamily,\n    titleFontFamily,\n  ] = processFonts([\n    headerBackTitleStyleFlattened.fontFamily,\n    headerLargeTitleStyleFlattened.fontFamily,\n    headerTitleStyleFlattened.fontFamily,\n  ]);\n\n  const titleText = title !== undefined ? title : route.name;\n\n  const headerLeftElement = headerLeft?.({ tintColor });\n  const headerRightElement = headerRight?.({ tintColor });\n  const headerTitleElement =\n    typeof headerTitle === 'function'\n      ? headerTitle({ tintColor, children: titleText })\n      : null;\n\n  if (Platform.OS === 'ios' && headerSearchBar != null && SearchBar == null) {\n    throw new Error(\n      `The current version of 'react-native-screens' doesn't support SearchBar in the header. Please update to the latest version to use this option.`\n    );\n  }\n\n  /**\n   * We need to set this in if:\n   * - Back button should stay visible when `headerLeft` is specified\n   * - If `headerTitle` for Android is specified, so we only need to remove the title and keep the back button\n   */\n  const backButtonInCustomView = headerBackVisible\n    ? headerLeftElement != null\n    : Platform.OS === 'android' && headerTitleElement != null;\n\n  return (\n    <ScreenStackHeaderConfig\n      backButtonInCustomView={backButtonInCustomView}\n      backgroundColor={\n        headerStyleFlattened.backgroundColor ??\n        (headerTranslucent ? 'transparent' : colors.card)\n      }\n      backTitle={headerBackTitleVisible ? headerBackTitle : ' '}\n      backTitleFontFamily={backTitleFontFamily}\n      backTitleFontSize={headerBackTitleStyleFlattened.fontSize}\n      blurEffect={headerBlurEffect}\n      color={tintColor}\n      direction={I18nManager.isRTL ? 'rtl' : 'ltr'}\n      hidden={headerShown === false}\n      hideBackButton={headerBackVisible === false}\n      hideShadow={headerShadowVisible === false}\n      largeTitle={headerLargeTitle}\n      largeTitleBackgroundColor={headerLargeStyleFlattened.backgroundColor}\n      largeTitleColor={headerLargeTitleStyleFlattened.color}\n      largeTitleFontFamily={largeTitleFontFamily}\n      largeTitleFontSize={headerLargeTitleStyleFlattened.fontSize}\n      largeTitleFontWeight={headerLargeTitleStyleFlattened.fontWeight}\n      largeTitleHideShadow={headerLargeTitleShadowVisible === false}\n      screenOrientation={orientation}\n      statusBarAnimation={statusBarAnimation}\n      statusBarHidden={statusBarHidden}\n      statusBarStyle={statusBarStyle}\n      title={typeof headerTitle === 'string' ? headerTitle : titleText}\n      titleColor={\n        headerTitleStyleFlattened.color ?? headerTintColor ?? colors.text\n      }\n      titleFontFamily={titleFontFamily}\n      titleFontSize={headerTitleStyleFlattened.fontSize}\n      titleFontWeight={headerTitleStyleFlattened.fontWeight}\n      topInsetEnabled={headerTopInsetEnabled}\n      translucent={\n        // This defaults to `true`, so we can't pass `undefined`\n        headerTranslucent === true\n      }\n    >\n      {Platform.OS === 'ios' ? (\n        <>\n          {headerLeftElement != null ? (\n            <ScreenStackHeaderLeftView>\n              {headerLeftElement}\n            </ScreenStackHeaderLeftView>\n          ) : null}\n          {headerTitleElement != null ? (\n            <ScreenStackHeaderCenterView>\n              {headerTitleElement}\n            </ScreenStackHeaderCenterView>\n          ) : null}\n        </>\n      ) : (\n        <>\n          {headerLeftElement != null || typeof headerTitle === 'function' ? (\n            <ScreenStackHeaderLeftView>\n              <View style={styles.row}>\n                {headerLeftElement}\n                {typeof headerTitle === 'function' ? (\n                  headerTitleElement\n                ) : (\n                  <HeaderTitle tintColor={tintColor}>{titleText}</HeaderTitle>\n                )}\n              </View>\n            </ScreenStackHeaderLeftView>\n          ) : null}\n        </>\n      )}\n      {headerBackImageSource !== undefined ? (\n        <ScreenStackHeaderBackButtonImage\n          key=\"backImage\"\n          source={headerBackImageSource}\n        />\n      ) : null}\n      {headerRightElement != null ? (\n        <ScreenStackHeaderRightView>\n          {headerRightElement}\n        </ScreenStackHeaderRightView>\n      ) : null}\n      {Platform.OS === 'ios' && headerSearchBar != null ? (\n        <ScreenStackHeaderSearchBarView>\n          <SearchBar {...headerSearchBar} />\n        </ScreenStackHeaderSearchBarView>\n      ) : null}\n    </ScreenStackHeaderConfig>\n  );\n}\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n});\n"]}